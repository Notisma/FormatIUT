Index: src/Modele/Repository/AbstractRepository.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n\nnamespace App\\FormatIUT\\Modele\\Repository;\n\nuse App\\FormatIUT\\Modele\\DataObject\\AbstractDataObject;\n\nabstract class AbstractRepository\n{\n    protected abstract function getNomTable(): string;\n\n    protected abstract function getNomsColonnes(): array;\n\n    protected abstract function getClePrimaire(): string;\n\n    public abstract function construireDepuisTableau(array $DataObjectTableau): AbstractDataObject;\n\n    /***\n     * @return array|null\n     * retourne une liste de l'ensemble des object d'une même classe\n     * renvoie null si aucun objet n'est créer\n     */\n    public function getListeObjet(): ?array\n    {\n        $sql = 'SELECT * FROM ' . $this->getNomTable();\n        $pdoStatement = ConnexionBaseDeDonnee::getPdo()->query($sql);\n        foreach ($pdoStatement as $item) {\n            $listeObjet[] = $this->construireDepuisTableau($item);\n        }\n        return $listeObjet;\n    }\n\n    public function getListeID()\n    {\n        $sql = 'SELECT * FROM ' . $this->getNomTable();\n        $pdoStatement = ConnexionBaseDeDonnee::getPdo()->query($sql);\n        foreach ($pdoStatement as $item) {\n            $listeObjet[] = $item[$this->getClePrimaire()];\n        }\n        return $listeObjet;\n    }\n\n\n    /***\n     * @param $clePrimaire\n     * @return AbstractDataObject|null\n     * retourne un objet correspondant à la clé primaire donnée en paramètre\n     * si l'objet n'existe pas, renvoie null\n     */\n\n    public function getObjectParClePrimaire($clePrimaire): ?AbstractDataObject\n    {\n        $primaire = $this->getClePrimaire();\n        $primaire = trim($primaire, \"()\");\n        $colonnesClePrimaire = explode(', ', $primaire);\n        $sql = \"SELECT * FROM \" . $this->getNomTable() . \" WHERE \";\n        foreach ($colonnesClePrimaire as $colonne) {\n            $sql .= \"$colonne = :$colonne\" . \"Tag AND \";\n            $values[$colonne . \"Tag\"] = $objet->formatTableau()[$colonne];\n        }\n        $pdoStatement = ConnexionBaseDeDonnee::getPdo()->prepare($sql);\n        $values = array(\"Tag\" => $clePrimaire);\n        $pdoStatement->execute($values);\n        $objet = $pdoStatement->fetch();\n        if (!$objet) {\n            return null;\n        }\n\n        return $this->construireDepuisTableau($objet);\n    }\n\n    // ----- CRUD -----\n\n    /***\n     * @param AbstractDataObject $objet\n     * @return void\n     * créer un object dans la Base de Donnée avec les informations de l'objet donné en paramètre\n     */\n\n    public function creerObjet(AbstractDataObject $objet): void\n    {\n        $sql = \"INSERT INTO \" . $this->getNomTable() . \" VALUES (\";\n        foreach ($this->getNomsColonnes() as $nomColonne) {\n            if ($nomColonne != $this->getNomsColonnes()[0]) {\n                $sql .= \",\";\n            }\n            $sql .= \":\" . $nomColonne . \"Tag\";\n            $values[$nomColonne . \"Tag\"] = $objet->formatTableau()[$nomColonne];\n        }\n        $sql .= \")\";\n        $pdoStatement = ConnexionBaseDeDonnee::getPdo()->prepare($sql);\n        $pdoStatement->execute($values);\n    }\n\n    public function modifierObjet(AbstractDataObject $objet): void\n    {\n        $sql = \"UPDATE \" . $this->getNomTable() . \" SET \";\n        foreach ($this->getNomsColonnes() as $nomColonne) {\n            if ($nomColonne != $this->getNomsColonnes()[0])\n                $sql .= \",\";\n            $sql .= \"$nomColonne = :$nomColonne\" . \"Tag\";\n            $values[$nomColonne . \"Tag\"] = $objet->formatTableau()[$nomColonne];\n        }\n        $where = \" WHERE \";\n        $clePrimaire = $this->getClePrimaire();\n        $clePrimaire = trim($clePrimaire, \"()\");\n        $colonnesClePrimaire = explode(', ', $clePrimaire);\n        foreach ($colonnesClePrimaire as $colonne) {\n            $where .= \"$colonne = :$colonne\" . \"Tag AND \";\n            $values[$colonne . \"Tag\"] = $objet->formatTableau()[$colonne];\n        }\n        $where = rtrim($where, \" AND \");\n        $sql .= $where;\n        $pdoStatement = ConnexionBaseDeDonnee::getPdo()->prepare($sql);\n        $pdoStatement->execute($values);\n    }\n\n    /***\n     * @param $clePrimaire\n     * @return void\n     * supprime dans la Base de donnée l'objet donc la clé primaire est en paramètre\n     */\n\n    public function supprimer($clePrimaire): void\n    {\n        $sql = \"DELETE FROM \" . $this->getNomTable() . \" WHERE \" . $this->getClePrimaire() . \"=:Tag \";\n        $pdoStatement = ConnexionBaseDeDonnee::getPdo()->prepare($sql);\n        $values = array(\"Tag\" => $clePrimaire);\n        $pdoStatement->execute($values);\n    }\n\n    //-------------AUTRES------------\n\n    public static function getResultatRechercheTrie($recherche): array\n    {\n        $pdo = ConnexionBaseDeDonnee::getPdo();\n        $res = [\n            'offres' => array(),\n            'entreprises' => array(),\n        ];\n\n        $sql = \"\n        SELECT *\n        FROM Offre\n        WHERE LOWER(sujet) LIKE LOWER(:rechercheTag)\n            OR LOWER(typeOffre) LIKE LOWER(:rechercheTag)\n            OR LOWER(detailProjet) LIKE LOWER(:rechercheTag)\n        ;\";\n        $pdoStatement = $pdo->prepare($sql);\n        $pdoStatement->execute(['rechercheTag' => \"%$recherche%\"]);\n        foreach ($pdoStatement as $row)\n            $res['offres'][] = (new OffreRepository())->construireDepuisTableau($row);\n\n        $sql = \"\n        SELECT *\n        FROM Entreprise\n        WHERE LOWER(nomEntreprise) LIKE LOWER(:rechercheTag)\n        ;\";\n        $pdoStatement = $pdo->prepare($sql);\n        $pdoStatement->execute(['rechercheTag' => \"%$recherche%\"]);\n        foreach ($pdoStatement as $row)\n            $res['entreprises'][] = (new EntrepriseRepository())->construireDepuisTableau($row);\n\n        return $res;\n    }\n    /***\n     * @param $clePrimaire\n     * @return true si l'objet existe dans la base de donnée, false sinon\n     */\n    public function estExistant($clePrimaire):bool{\n        $sql=\"SELECT * FROM \".$this->getNomTable().\" WHERE \".$this->getClePrimaire().\"=:Tag \";\n        $pdoStatement=ConnexionBaseDeDonnee::getPdo()->prepare($sql);\n        $values=array(\"Tag\"=>$clePrimaire);\n        $pdoStatement->execute($values);\n        $objet=$pdoStatement->fetch();\n        if (!$objet){\n            return false;\n        }\n        return true;\n    }\n}\n\n\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Modele/Repository/AbstractRepository.php b/src/Modele/Repository/AbstractRepository.php
--- a/src/Modele/Repository/AbstractRepository.php	(revision 6673a856eb7de874fab5bc4d5d80e20ce549f953)
+++ b/src/Modele/Repository/AbstractRepository.php	(date 1700126793025)
@@ -47,27 +47,27 @@
      * si l'objet n'existe pas, renvoie null
      */
 
-    public function getObjectParClePrimaire($clePrimaire): ?AbstractDataObject
-    {
-        $primaire = $this->getClePrimaire();
-        $primaire = trim($primaire, "()");
-        $colonnesClePrimaire = explode(', ', $primaire);
+    public function getObjectParClePrimaire($clePrimaire): ?AbstractDataObject{
         $sql = "SELECT * FROM " . $this->getNomTable() . " WHERE ";
-        foreach ($colonnesClePrimaire as $colonne) {
-            $sql .= "$colonne = :$colonne" . "Tag AND ";
-            $values[$colonne . "Tag"] = $objet->formatTableau()[$colonne];
+        $colonnes = explode(',', $this->getClePrimaire());
+        foreach ($colonnes as $index => $colonne) {
+            if ($index > 0) {
+                $sql .= " AND ";
+            }
+            $sql .= "$colonne = :$colonne" . "Tag";
+            $values[$colonne . "Tag"] = $clePrimaire[$index];
         }
         $pdoStatement = ConnexionBaseDeDonnee::getPdo()->prepare($sql);
-        $values = array("Tag" => $clePrimaire);
         $pdoStatement->execute($values);
         $objet = $pdoStatement->fetch();
         if (!$objet) {
             return null;
         }
-
         return $this->construireDepuisTableau($objet);
     }
 
+
+
     // ----- CRUD -----
 
     /***
Index: src/vue/Etudiant/vueDetailOffreEtudiant.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><html>\n<head>\n    <link rel=\"stylesheet\" href=\"./../ressources/css/styleVueDetailEtudiant.css\">\n    <script src=\"../ressources/javaScript/mesFonctions.js\"></script>\n</head>\n<body>\n<div class=\"boiteMain\" id=\"aGriser\">\n\n\n    <div class=\"conteneurBienvenueDetailEntr\">\n        <div class=\"texteBienvenue\">\n            <!-- affichage des informations principales de l'offre -->\n            <h2><?php use App\\FormatIUT\\Controleur\\ControleurEtuMain;\n                use App\\FormatIUT\\Modele\\DataObject\\Regarder;\n                use App\\FormatIUT\\Modele\\Repository\\EtudiantRepository;\n                use App\\FormatIUT\\Modele\\Repository\\FormationRepository;\n                use App\\FormatIUT\\Modele\\Repository\\RegarderRepository;\n\n                $nomHTML = htmlspecialchars($offre->getNomOffre());\n                echo $nomHTML . \" - \" . $offre->getTypeOffre() ?></h2>\n            <h4><?php echo \"Du \" . date_format($offre->getDateDebut(), 'd F Y') . \" au \" . date_format($offre->getDateFin(), 'd F Y') ?></h4>\n            <p><?php echo ($offre->getDateDebut()->diff($offre->getDateFin()))->format('Durée : %m mois, %d jours.'); ?></p>\n        </div>\n        <div class=\"imageBienvenue\">\n            <img src=\"../ressources/images/entrepriseOffre.png\" alt=\"image de bienvenue\">\n        </div>\n    </div>\n\n    <!-- TODO finir de lier à la BD -->\n    <div class=\"infosOffreEntr\">\n        <h3>Les Informations de l'Offre</h3>\n        <div class=\"petitConteneurInfosOffre\">\n            <div class=\"overflowListe\">\n                <div class=\"overflowListe2\">\n                    <div id=\"liseInfosOffreEntr\">\n                        <p><span>Rémunération :</span> <?php echo $offre->getGratification() ?>€ par mois</p>\n                        <p><span>Durée en heures :</span> <?php echo $offre->getDureeHeures() ?> heures au total</p>\n                        <p><span>Nombre de jours par semaines :</span> <?php echo $offre->getJoursParSemaine() ?> jours\n                        </p>\n                        <p><span>Nombre d'Heures hebdomadaires :</span> <?php echo $offre->getNbHeuresHebdo() ?> heures\n                        </p>\n                        <p>\n                            <span>Détails de l'offre :</span> <?php $detailHTML = htmlspecialchars($offre->getDetailProjet());\n                            echo $detailHTML ?></p>\n                        <div class=\"infosSurEntreprise\">\n                            <div class=\"left\">\n                                <?php\n                                echo '<img src=\"data:image/jpeg;base64,' . base64_encode($entreprise->getImg()) . '\" class=\"imageEntr\">';\n                                ?>\n                            </div>\n                            <div class=\"right\">\n                                <h3><?php echo $entreprise->getNomEntreprise(); ?></h3>\n                                <p><span>Téléphone : </span><?php echo $entreprise->getTel(); ?></p>\n                                <p><span>Adresse : </span><?php echo $entreprise->getAdresse(); ?></p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <img src=\"../ressources/images/etudiantsHeureux.png\" alt=\"illu\">\n        </div>\n    </div>\n\n\n    <div class=\"actionsRapidesEntr\">\n        <h3>Actions Rapides</h3>\n\n        <?php\n\n        echo '<a id=\"my-button\">\n                <button class=\"boutonAssigner\" onclick=\"afficherPopupDepotCV_LM()\" ';\n        $bool = false;\n        $formation = ((new FormationRepository())->estFormation($_GET['idOffre']));\n        if (is_null($formation)) {\n            if (!(new EtudiantRepository())->aUneFormation(\\App\\FormatIUT\\Controleur\\ControleurEtuMain::getCleEtudiant())) {\n                if (!(new EtudiantRepository())->aPostuler(\\App\\FormatIUT\\Controleur\\ControleurEtuMain::getCleEtudiant(), $_GET['idOffre'])) {\n                    $bool = true;\n                }\n            }\n        }\n        if (!$bool) {\n            echo 'id=\"disabled\" disabled';\n        }\n        echo \">POSTULER</button></a>\";\n\n        echo '<a id=\"my-button\">\n                <button class=\"boutonAssigner\" onclick=\"afficherPopupModifCV_LM()\" ';\n\n        if ($bool) {\n            echo 'id=\"disabled\" disabled';\n        }\n        echo \">MODIFIER VOS FICHIERS</button></a>\";\n        ?>\n\n\n        <a href='?action=afficherAccueilEtu&controleur=EtuMain'>\n            <button class='boutonAssigner'>RETOUR</button>\n        </a>\n    </div>\n\n\n    <div class=\"listeEtudiantsPostulants\">\n        <h3>Nombre d'étudiants postulants</h3>\n\n        <div class=\"wrapPostulants\">\n            <?php\n\n            $formation = (new \\App\\FormatIUT\\Modele\\Repository\\FormationRepository())->estFormation($offre->getIdOffre());\n            if ($formation) {\n                if ($formation->getIdEtudiant() == \\App\\FormatIUT\\Controleur\\ControleurEtuMain::getCleEtudiant()) {\n                    echo \"<div class='nbPostulants'>\n                <img src='../ressources/images/equipe.png' alt='postulants'>\n                <h4>Vous avez l'offre</h4></div>\";\n                } else {\n                    echo \"<div class='nbPostulants'>\n                <img src='../ressources/images/equipe.png' alt='postulants'>\n                <h4>L'offre est déjà occupée </h4></div>\";\n                }\n            } else {\n                $listeEtu = ((new \\App\\FormatIUT\\Modele\\Repository\\EtudiantRepository())->EtudiantsEnAttente($offre->getIdOffre()));\n                if (empty($listeEtu)) {\n                    echo \"\n                <div class='erreur'>\n                <h4>Personne n'a postulé. Faites Vite !</h4>\n                <img src='../ressources/images/erreur.png' alt='erreur'>\n                </div>\n                \";\n                } else {\n                    echo \"\n                <div class='nbPostulants'>\n                <img src='../ressources/images/equipe.png' alt='postulants'>\n                <h4>\";\n                    $nbEtudiants = ((new EtudiantRepository())->nbPostulation($offre->getIdOffre()));\n                    echo $nbEtudiants . \" étudiant\";\n                    if ($nbEtudiants == 1) echo \" a\";\n                    else echo \"s ont\";\n                    echo \" déjà postulé.</h4>\n                    </div>\";\n                }\n            }\n\n            ?>\n\n        </div>\n\n    </div>\n\n\n</div>\n\n<div id=\"popup\" class=\"popup\">\n    <div class=\"mainPopup\">\n        <h2>ENVOYEZ VOS DOCUMENTS POUR POSTULER !</h2>\n        <p>Les documents doivent être au format PDF</p>\n\n        <form enctype=\"multipart/form-data\"\n              action=\"?action=postuler&controleur=EtuMain&idOffre=<?php echo $offre->getIdOffre() ?>\"\n              method=\"post\">\n            <div>\n                <div class=\"contenuDepot\">\n                    <label>Déposez votre CV :</label>\n                    <input type=\"hidden\" name=\"MAX_FILE_SIZE\" value=\"1000000\"/>\n                    <input type=\"file\" id=\"fd1\" name=\"fic\" onchange=\"updateImage(1)\" accept=\".pdf, .txt\" size=500/>\n                </div>\n                <div class=\"imagesDepot\">\n                    <img id=\"imageNonDepose1\" src=\"../ressources/images/rejete.png\" alt=\"image\">\n                    <img id=\"imageDepose1\" src=\"../ressources/images/verifie.png\" alt=\"image\" style=\"display: none;\">\n                </div>\n\n            </div>\n            <div>\n                <div class=\"contenuDepot\">\n                    <label>Déposez votre lettre de Motivation :</label>\n                    <input type=\"hidden\" name=\"MAX_FILE_SIZE\" value=\"1000000\"/>\n                    <input type=\"file\" id=\"fd2\" name=\"ficLM\" onchange=\"updateImage(2)\" accept=\".pdf, .txt\" size=500/>\n                </div>\n                <div class=\"imagesDepot\">\n                    <img id=\"imageNonDepose2\" src=\"../ressources/images/rejete.png\" alt=\"image\">\n                    <img id=\"imageDepose2\" src=\"../ressources/images/verifie.png\" alt=\"image\" style=\"display: none;\">\n                </div>\n\n            </div>\n            <input type=\"submit\" value=\"Postuler\">\n        </form>\n\n        <div class=\"conteneurBoutonPopup\">\n            <a onclick=\"fermerPopupDepotCV_LM()\">\n                <button class=\"boutonAssignerPopup\">RETOUR</button>\n            </a>\n\n        </div>\n    </div>\n\n    <div class=\"descPopup\">\n        <img src=\"../ressources/images/déposerCV.png\" alt=\"image\">\n        <h2>DEPOSEZ VOS DOCUMENTS POUR AVOIR UN PROFIL COMPLET ET AVOIR PLUS DE CHANCES !</h2>\n    </div>\n</div>\n\n<div id=\"popupModif\" class=\"popup\">\n    <div class=\"mainPopup\">\n        <h2>MODIFIEZ VOS DOCUMENTS !</h2>\n        <p>Les documents doivent être au format PDF</p>\n\n        <form enctype=\"multipart/form-data\"\n              action=\"?action=modifierFichiers&controleur=EtuMain&idOffre=<?php echo $offre->getIdOffre() ?>\"\n              method=\"post\">\n            <div>\n                <div class=\"contenuDepot\">\n                    <label>Déposez votre CV :</label>\n                    <?php\n                        $regarder = (new RegarderRepository())->getObjectParClePrimaire();\n                        if($regarder->formatTableau()[\"cv\"] != null){\n                            echo \"<p> Vous avez déjà déposé un CV </p>\";\n                        }\n                        else{\n                            echo \"<p> Vous n'avez pas encore déposé de CV</p>\";\n                        }\n                    ?>\n                    <input type=\"hidden\" name=\"MAX_FILE_SIZE\" value=\"1000000\"/>\n                    <input type=\"file\" id=\"fd3\" name=\"fic\" onchange=\"updateImage(3)\" accept=\".pdf, .txt\" size=500/>\n                </div>\n                <div class=\"imagesDepot\">\n                    <img id=\"imageNonDepose3\" src=\"../ressources/images/rejete.png\" alt=\"image\">\n                    <img id=\"imageDepose3\" src=\"../ressources/images/verifie.png\" alt=\"image\" style=\"display: none;\">\n                </div>\n\n            </div>\n            <div>\n                <div class=\"contenuDepot\">\n                    <label>Déposez votre lettre de Motivation :</label>\n                    <?php\n                        $regarder = (new RegarderRepository())->getObjectParClePrimaire();\n                        if($regarder->formatTableau()[\"lettre\"] != null){\n                            echo \"<p> Vous avez déjà déposé une lettre de motivation </p>\";\n                        }\n                        else{\n                            echo \"<p> Vous n'avez pas encore déposé de lettre de motivation</p>\";\n                        }\n                    ?>\n                    <input type=\"hidden\" name=\"MAX_FILE_SIZE\" value=\"1000000\"/>\n                    <input type=\"file\" id=\"fd4\" name=\"ficLM\" onchange=\"updateImage(4)\" accept=\".odt, .docx, .pdf, .txt\" size=500/>\n                </div>\n                <div class=\"imagesDepot\">\n                    <img id=\"imageNonDepose4\" src=\"../ressources/images/rejete.png\" alt=\"image\">\n                    <img id=\"imageDepose4\" src=\"../ressources/images/verifie.png\" alt=\"image\" style=\"display: none;\">\n                </div>\n\n            </div>\n            <input type=\"submit\" value=\"Modifier vos documents\">\n        </form>\n\n        <div class=\"conteneurBoutonPopup\">\n            <a onclick=\"fermerPopupModifCV_LM()\">\n                <button class=\"boutonAssignerPopup\">RETOUR</button>\n            </a>\n\n        </div>\n    </div>\n\n    <div class=\"descPopup\">\n        <img src=\"../ressources/images/déposerCV.png\" alt=\"image\">\n        <h2>DEPOSEZ VOS DOCUMENTS POUR AVOIR UN PROFIL COMPLET ET AVOIR PLUS DE CHANCES !</h2>\n    </div>\n</div>\n\n\n</body>\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/vue/Etudiant/vueDetailOffreEtudiant.php b/src/vue/Etudiant/vueDetailOffreEtudiant.php
--- a/src/vue/Etudiant/vueDetailOffreEtudiant.php	(revision 6673a856eb7de874fab5bc4d5d80e20ce549f953)
+++ b/src/vue/Etudiant/vueDetailOffreEtudiant.php	(date 1700126793037)
@@ -209,7 +209,7 @@
                 <div class="contenuDepot">
                     <label>Déposez votre CV :</label>
                     <?php
-                        $regarder = (new RegarderRepository())->getObjectParClePrimaire();
+                        $regarder = (new RegarderRepository())->getObjectParClePrimaire(array(ControleurEtuMain::getCleEtudiant(), $offre->getIdOffre()));
                         if($regarder->formatTableau()["cv"] != null){
                             echo "<p> Vous avez déjà déposé un CV </p>";
                         }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"e445721a-8608-416a-addf-17e19ec2aec7\" name=\"Changes\" comment=\"merge de deposerCV (inshallah)\">\n      <change beforePath=\"$PROJECT_DIR$/src/Configuration/Configuration.php\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Configuration/Configuration.php\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/vue/Etudiant/vueDetailOffreEtudiant.php\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/vue/Etudiant/vueDetailOffreEtudiant.php\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"ComposerSettings\">\n    <execution />\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$\" value=\"sprint2\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectColorInfo\"><![CDATA[{\n  \"associatedIndex\": 6\n}]]></component>\n  <component name=\"ProjectId\" id=\"2Y8XXHJGuyi2BhufkXTYPLd7bFu\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\n    <ConfirmationsSetting value=\"1\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\n    \"WebServerToolWindowFactoryState\": \"false\",\n    \"git-widget-placeholder\": \"majCV\",\n    \"last_opened_file_path\": \"C:/MAMP/htdocs/devapplicationformatiut\",\n    \"node.js.detected.package.eslint\": \"true\",\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\n    \"vue.rearranger.settings.migration\": \"true\"\n  }\n}]]></component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"e445721a-8608-416a-addf-17e19ec2aec7\" name=\"Changes\" comment=\"merge de deposerCV (inshallah)\" />\n      <created>1699908217251</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1699908217251</updated>\n      <workItem from=\"1699908218347\" duration=\"618000\" />\n    </task>\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 6673a856eb7de874fab5bc4d5d80e20ce549f953)
+++ b/.idea/workspace.xml	(date 1700127193760)
@@ -4,8 +4,9 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="e445721a-8608-416a-addf-17e19ec2aec7" name="Changes" comment="merge de deposerCV (inshallah)">
-      <change beforePath="$PROJECT_DIR$/src/Configuration/Configuration.php" beforeDir="false" afterPath="$PROJECT_DIR$/src/Configuration/Configuration.php" afterDir="false" />
+    <list default="true" id="e445721a-8608-416a-addf-17e19ec2aec7" name="Changes" comment="Corrections.">
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Modele/Repository/AbstractRepository.php" beforeDir="false" afterPath="$PROJECT_DIR$/src/Modele/Repository/AbstractRepository.php" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/vue/Etudiant/vueDetailOffreEtudiant.php" beforeDir="false" afterPath="$PROJECT_DIR$/src/vue/Etudiant/vueDetailOffreEtudiant.php" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -27,9 +28,9 @@
   <component name="MarkdownSettingsMigration">
     <option name="stateVersion" value="1" />
   </component>
-  <component name="ProjectColorInfo"><![CDATA[{
-  "associatedIndex": 6
-}]]></component>
+  <component name="ProjectColorInfo">{
+  &quot;associatedIndex&quot;: 6
+}</component>
   <component name="ProjectId" id="2Y8XXHJGuyi2BhufkXTYPLd7bFu" />
   <component name="ProjectLevelVcsManager" settingsEditedManually="true">
     <ConfirmationsSetting value="1" id="Add" />
@@ -38,19 +39,19 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "WebServerToolWindowFactoryState": "false",
-    "git-widget-placeholder": "majCV",
-    "last_opened_file_path": "C:/MAMP/htdocs/devapplicationformatiut",
-    "node.js.detected.package.eslint": "true",
-    "node.js.selected.package.eslint": "(autodetect)",
-    "node.js.selected.package.tslint": "(autodetect)",
-    "vue.rearranger.settings.migration": "true"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;majCV&quot;,
+    &quot;last_opened_file_path&quot;: &quot;C:/MAMP/htdocs/devapplicationformatiut&quot;,
+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
+    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   }
-}]]></component>
+}</component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
     <task active="true" id="Default" summary="Default task">
@@ -77,4 +78,8 @@
       </map>
     </option>
   </component>
+  <component name="VcsManagerConfiguration">
+    <MESSAGE value="tkt c bizarre" />
+    <option name="LAST_COMMIT_MESSAGE" value="tkt c bizarre" />
+  </component>
 </project>
\ No newline at end of file
